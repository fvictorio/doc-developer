<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="architecture-overview">
    <title>Architecture Overview</title>
    <para>
        The OTRS framework is modular. The following picture shows the basic layer architecture of
        OTRS.
    </para>
    <para>
        <figure>
            <title>OTRS Architecture</title>
            <screenshot>
                <graphic fileref="screenshots/architecture.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
            </screenshot>
        </figure>
    </para>
    <para>
        Introduced in OTRS 3.1, the OTRS Generic Interface continues OTRS modularity. The next
        picture shows the basic layer architecture of the Generic Interface.
    </para>
    <para>
        <figure>
            <title>Generic Interface Architecture</title>
            <screenshot>
                <graphic fileref="screenshots/giarchitecture.png" scalefit="1" width="100%" contentdepth="100%"></graphic>
            </screenshot>
        </figure>
    </para>
    <section id="directory">
        <title>Directories</title>
        <para>
        <informaltable>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Directory</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>bin/</entry>
                        <entry>commandline tools</entry>
                    </row>
                    <row>
                        <entry>bin/cgi-bin/</entry>
                        <entry>web handle</entry>
                    </row>
                    <row>
                        <entry>bin/fcgi-bin/</entry>
                        <entry>fast cgi web handle</entry>
                    </row>
                    <row>
                        <entry>Kernel</entry>
                        <entry>application codebase</entry>
                    </row>
                    <row>
                        <entry>Kernel/Config/</entry>
                        <entry>configuration files</entry>
                    </row>
                    <row>
                        <entry>Kernel/Config/Files</entry>
                        <entry>configuration files</entry>
                    </row>
                    <row>
                        <entry>Kernel/GenericInterface/</entry>
                        <entry>the Generic Interface API</entry>
                    </row>
                    <row>
                        <entry>Kernel/GenericInterface/Invoker/</entry>
                        <entry>invoker modules for Generic Interface</entry>
                    </row>
                    <row>
                        <entry>Kernel/GenericInterface/Mapping/</entry>
                        <entry>mapping modules for Generic Interface, e.g. Simple</entry>
                    </row>
                    <row>
                        <entry>Kernel/GenericInterface/Operation/</entry>
                        <entry>operation modules for Generic Interface</entry>
                    </row>
                    <row>
                        <entry>Kernel/GenericInterface/Transport/</entry>
                        <entry>transport modules for Generic Interface, e.g. "HTTP SOAP"</entry>
                    </row>
                    <row>
                        <entry>Kernel/Language</entry>
                        <entry>language translation files</entry>
                    </row>
                    <row>
                        <entry>Kernel/Scheduler/</entry>
                        <entry>Scheduler files</entry>
                    </row>
                    <row>
                        <entry>Kernel/Scheduler/TaskHandler</entry>
                        <entry>handler modules for scheduler tasks, e.g. GenericInterface</entry>
                    </row>
                    <row>
                        <entry>Kernel/System/</entry>
                        <entry>core modules, e.g. Log, Ticket...</entry>
                    </row>
                    <row>
                        <entry>Kernel/Modules/</entry>
                        <entry>frontend modules, e.g. QueueView...</entry>
                    </row>
                    <row>
                        <entry>Kernel/Output/HTML/</entry>
                        <entry>html templates</entry>
                    </row>
                    <row>
                        <entry>var/</entry>
                        <entry>variable data</entry>
                    </row>
                    <row>
                        <entry>var/log</entry>
                        <entry>logfiles</entry>
                    </row>
                    <row>
                        <entry>var/cron/</entry>
                        <entry>cron files</entry>
                    </row>
                    <row>
                        <entry>var/httpd/htdocs/</entry>
                        <entry>htdocs directory with index.html</entry>
                    </row>
                    <row>
                        <entry>var/httpd/htdocs/skins/Agent/</entry>
                        <entry>available skins for the Agent interface</entry>
                    </row>
                    <row>
                        <entry>var/httpd/htdocs/skins/Customer/</entry>
                        <entry>available skins for the Customer interface</entry>
                    </row>
                    <row>
                        <entry>var/httpd/htdocs/js/</entry>
                        <entry>JavaScript files</entry>
                    </row>
                    <row>
                        <entry>scripts/</entry>
                        <entry>misc files</entry>
                    </row>
                    <row>
                        <entry>scripts/test/</entry>
                        <entry>unit test files</entry>
                    </row>
                    <row>
                        <entry>scripts/test/sample/</entry>
                        <entry>unit test sample data files</entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
        </para>
    </section>
    <section id="otrs-files">
        <title>Files</title>
        <para>.pl = Perl</para>
        <para>.pm = Perl Module</para>
        <para>.tt = Template::Toolkit template files</para>
        <para>.dist = Default templates of files</para>
        <para>.yaml or .yml = YAML files, used for Web Service configuration</para>
    </section>
    <section id="core-module">
        <title>Core Modules</title>
        <para>
            Core modules are located under <filename>$OTRS_HOME/Kernel/System/*</filename>. This layer is for the
            logical work. Core modules are used to handle system routines like "lock ticket" and
            "create ticket". A few main core modules are:
        </para>
        <para>
        <itemizedlist mark="round">
            <listitem>
                <para><literal>Kernel::System::Config</literal> (to access config options)</para>
            </listitem>
            <listitem>
                <para><literal>Kernel::System::Log</literal> (to log into OTRS log backend)</para>
            </listitem>
            <listitem>
                <para><literal>Kernel::System::DB</literal> (to access the database backend)</para>
            </listitem>
            <listitem>
                <para><literal>Kernel::System::Auth</literal> (to check user authentication)</para>
            </listitem>
            <listitem>
                <para><literal>Kernel::System::User</literal> (to manage users)</para>
            </listitem>
            <listitem>
                <para><literal>Kernel::System::Group</literal> (to manage groups)</para>
            </listitem>
            <listitem>
                <para><literal>Kernel::System::Email</literal> (for sending emails)</para>
            </listitem>
        </itemizedlist>
        </para>
        <para>
            For more information, see:
            <ulink url="http://otrs.github.io/doc/">http://otrs.github.io/doc/</ulink>
        </para>
    </section>
    <section id="frontend-handle">
        <title>Frontend Handle</title>
        <para>
            The interface between the browser, web server and the frontend modules. A frontend
            module can be used via the HTTP-link.
        </para>
        <para>
            <ulink url="">http://localhost/otrs/index.pl?Action=Module</ulink>
        </para>
    </section>
    <section id="frontend-module">
        <title>Frontend Modules</title>
        <para>
            Frontend modules are located under <filename>$OTRS_HOME/Kernel/Modules/*.pm</filename>. There are two
            public functions in there - <code>new()</code> and <code>run()</code> - which are accessed from the Frontend
            Handle (e.g. <filename>index.pl</filename>).
        </para>
        <para>
            <code>new()</code> is used to create a frontend module object. The Frontend Handle provides the
            used frontend module with the basic framework objects. These are, for example:
            <literal>ParamObject</literal> (to get web form params), <literal>DBObject</literal> (to use existing database connections),
            <literal>LayoutObject</literal> (to use templates and other html layout functions), <literal>ConfigObject</literal> (to
            access config settings), <literal>LogObject</literal> (to use the framework log system), <literal>UserObject</literal>
            (to get the user functions from the current user), <literal>GroupObject</literal> (to get the group
            functions).
        </para>
        <para>
            For more information on core modules see:
            <ulink url="http://otrs.github.io/doc/">http://otrs.github.io/doc/</ulink>
        </para>
    </section>
    <section id="cmd-frontend">
        <title>CMD Frontend</title>
        <para>
            The CMD (Command) Frontend is like the Web Frontend Handle and the Web Frontend Module
            in one (just without the <literal>LayoutObject</literal>) and uses the core modules for some actions in
            the system.
        </para>
    </section>
    <section id="Generic-Interface">
        <title>Generic Interface Modules</title>
        <para>
            Generic Interface modules are located under <filename>$OTRS_HOME/Kernel/GenericInterface/*</filename>.
            Generic Interface modules are used to handle each part of a web service execution on
            the system. The main modules for the Generic Interface are:
        </para>
        <para>
        <itemizedlist mark="round">
            <listitem>
                <para>
                    <literal>Kernel::GenericInterface::Transport</literal> (to interact with remote systems)
                </para>
            </listitem>
            <listitem>
                <para>
                    <literal>Kernel::GenericInterface::Mapping</literal> (to transform data into a required format)
                </para>
            </listitem>
            <listitem>
                <para>
                    <literal>Kernel::GenericInterface::Requester</literal> (to use OTRS as a client for the web
                    service)
                </para>
            </listitem>
            <listitem>
                <para>
                    <literal>Kernel::GenericInterface::Provider</literal> (to use OTRS as a server for web service)
                </para>
            </listitem>
            <listitem>
                <para>
                    <literal>Kernel::GenericInterface::Operation</literal> (to execute Provider actions)
                </para>
            </listitem>
            <listitem>
                <para>
                    <literal>Kernel::GenericInterface::Invoker</literal> (to execute Requester actions)
                </para>
            </listitem>
            <listitem>
                <para>
                    <literal>Kernel::GenericInterface::Debugger</literal> (to track web service communication,
                    using log entries)
                </para>
            </listitem>
        </itemizedlist>
        </para>
        <para>
            For more information, see:
            <ulink url="http://otrs.github.io/doc/">http://otrs.github.io/doc/</ulink>
        </para>
        <section id="Generic-Interface-Invoker">
            <title>Generic Interface Invoker Modules</title>
            <para>
                Generic Interface Invoker modules are located under
                <filename>$OTRS_HOME/Kernel/GenericInterface/Invoker/*</filename>. Each Invoker is contained in a folder
                called <literal>Controller</literal>. This approach helps to define a name space not only for
                internal classes and methods but for filenames too. For example:
                <filename>$OTRS_HOME/Kernel/GenericInterface/Invoker/Test/</filename> is the
                Controller for all Test-type invokers.
            </para>
            <para>
                Generic Interface Invoker modules are used as a backend to create requests for
                Remote Systems to execute actions.
            </para>
            <para>
                For more information, see:
                <ulink url="http://otrs.github.io/doc/">http://otrs.github.io/doc/</ulink>
            </para>
        </section>
        <section id="Generic-Interface-Mapping">
            <title>Generic Interface Mapping Modules</title>
            <para>
                Generic Interface Mapping modules are located under
                <filename>$OTRS_HOME/Kernel/GenericInterface/Mapping/*</filename>. These modules are used to transform
                data (keys and values) from one format to another.
            </para>
            <para>
                For more information, see:
                <ulink url="http://otrs.github.io/doc/">http://otrs.github.io/doc/</ulink>
            </para>
        </section>
        <section id="Generic-Interface-Operation">
            <title>Generic Interface Operation Modules</title>
            <para>
                Generic Interface Operation modules are located under
                <filename>$OTRS_HOME/Kernel/GenericInterface/Operation/*</filename>. Each Operation is contained in a
                folder called <literal>Controller</literal>. This approach help to define a name space not only for
                internal classes and methods but for filenames too. For example:
                <filename>$OTRS_HOME/Kernel/GenericInterface/Operation/Ticket/</filename> is the
                Controller for all Ticket-type operations.
            </para>
            <para>
                Generic Interface operation modules are used as a backend to perform actions
                requested by a remote system.
            </para>
            <para>
                For more information, see:
                <ulink url="http://otrs.github.io/doc/">http://otrs.github.io/doc/</ulink>
            </para>
        </section>
        <section id="Generic-Interface-Transport">
            <title>Generic Interface Transport Modules</title>
            <para>
                Generic Interface Network Transport modules are located under
                <filename>$OTRS_HOME/Kernel/GenericInterface/Operation/*</filename>. Each transport module should be
                placed in a directory named as the Network Protocol used. For example: The "HTTP
                SOAP" transport module, located in <filename>$OTRS_HOME/Kernel/GenericInterface/Transport/HTTP/SOAP.pm</filename>.
            </para>
            <para>
                Generic Interface transport modules are used send data to, and receive data from a
                Remote System.
            </para>
            <para>
                For more information, see:
                <ulink url="http://otrs.github.io/doc/">http://otrs.github.io/doc/</ulink>
            </para>
        </section>
    </section>
    <section id="Scheduler-TaskHandler">
        <title>Scheduler Task Handler Modules</title>
        <para>
            Scheduler Task Handler modules are located under
            <filename>$OTRS_HOME/Kernel/Scheduler/TaskHandler/*</filename>. These modules are used to perform asynchronous
            tasks. For example, the <literal>GenericInterface</literal> task handler perform Generic Interface Requests to
            Remote Systems outside the apache process. This helps the system to be more responsive,
            preventing possible performance issues.
        </para>
        <para>
            For more information, see:
            <ulink url="http://otrs.github.io/doc/">http://otrs.github.io/doc/</ulink>
        </para>
    </section>
    <section id="database">
        <title>Database</title>
        <para>
            The database interface supports different databases.
        </para>
        <para>
            For the OTRS data model please refer to the files in your <filename>/doc</filename> directory. Alternatively
            you can look at the data model
            <ulink url="https://github.com/OTRS/otrs/blob/master/development/diagrams/Database/OTRSDatabaseDiagram.png">
                on github
            </ulink>.
        </para>
    </section>
</section>
